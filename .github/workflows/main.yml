name: Build and Release KHA

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build for Windows
        run: npm run build:windows

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v2
        with:
          name: electron-windows
          path: dist/win-unpacked/*

  build-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build for macOS
        run: npm run build:mac

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v2
        with:
          name: electron-mac
          path: dist/mac/*

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build for Linux
        run: npm run build:linux

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v2
        with:
          name: electron-linux
          path: dist/linux-unpacked/*

  release:
    needs: [build-windows, build-mac, build-linux]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: electron-windows
          path: dist/win

      - name: Download macOS artifacts
        uses: actions/download-artifact@v2
        with:
          name: electron-mac
          path: dist/mac

      - name: Download Linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: electron-linux
          path: dist/linux

      - name: Get the version from package.json
        id: get_version
        run: echo "VERSION=$(jq -r .version < package.json)" >> $GITHUB_ENV

      - name: Set Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Crear y etiquetar el nuevo tag
      - name: Create tag
        run: git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"

      # Empujar el tag recién creado
      - name: Push Git tag
        run: git push origin "v${{ env.VERSION }}"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # Crear el release
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "v${{ env.VERSION }}"
          body: |
            ![Electron version](https://img.shields.io/badge/Electron-v30.0.1-9feaf9)
            
            Actualizamos nuestra app periódicamente para que te resulte aún más fácil realizar tus tareas de la congregación. Siempre estamos trabajando en nuevas características, correcciones de errores y mejoras en el rendimiento de Kingdom Hall Attendant. Asegúrate de tener siempre la última versión para disfrutar de la mejor experiencia. Si tienes algún comentario o problema, comunícate con nosotros a través de livrasand@outlook.com o cabal: `cabal://53c815d8d410a5fe3ed6cc03f0f318af142202fd868787d83e5efa77d6211554`. Nos complace poder ayudarte.
            
          files: |
            dist/win/*
            dist/mac/*
            dist/linux/*
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
